# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# 소스를 CDN으로 변경
# source 'https://github.com/CocoaPods/Specs.git'
source 'https://cdn.cocoapods.org/'

# gRPC 컴파일러 옵션 문제 해결을 위한 전역 설정
ENV['GRPC_CFSTREAM_RUN_LOOP'] = 'CFRunLoopGetMain()'
ENV['GRPC_SHADOW_BORINGSSL_SYMBOLS'] = 'NO'
$GRPC_BUILD_CONFIG = { 'OTHER_CFLAGS' => '-Wno-shorten-64-to-32 -Wno-comma -Wno-unreachable-code -Wno-shift-op-parentheses' }

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  # 정적 프레임워크 사용으로 변경
  use_frameworks!(:linkage => :static)
  use_modular_headers!
  
  # 버전 정보 제거
  pod 'gRPC-Core', '~> 1.65.0', :modular_headers => true
  pod 'gRPC-C++', '~> 1.65.0', :modular_headers => true
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # 크래시 방지를 위한 iOS 배포 타겟 설정
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      if config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f < 13.0
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      end
      
      # 모든 프레임워크 임베딩 설정
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      
      # Firebase에 필요한 빌드 설정 추가
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      
      # gRPC 컴파일러 플래그 문제 해결
      if target.name.include?('gRPC')
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'GRPC_SHADOW_BORINGSSL_SYMBOLS=0'
        config.build_settings['OTHER_CFLAGS'] = '-Wno-shorten-64-to-32 -Wno-comma -Wno-unreachable-code -Wno-shift-op-parentheses'
        # -G 옵션 제거 (명시적으로)
        if config.build_settings['OTHER_LDFLAGS']
          config.build_settings['OTHER_LDFLAGS'] = config.build_settings['OTHER_LDFLAGS'].gsub(/\s*-G\s*/, ' ')
        end
      end
    end
  end
  
  # Flutter 빌드 설정 추가
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # 프레임워크 링크 문제 해결을 위한 추가 설정
    target.build_configurations.each do |config|
      config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
    end
  end
end
